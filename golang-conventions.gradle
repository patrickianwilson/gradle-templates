/*

This convention plugin requires the following ext {} block on the project applying the plugin:

ext {
    mainPackage= "project"
    runArgs = ["help"]
}
*/


task assembleGo (type: Exec) {

        workingDir "$projectDir"
        commandLine 'go', 'install', project.mainPackage

        inputs.dir "$projectDir/src/"
        outputs.dir "$projectDir/pkg"
        outputs.dir "$projectDir/bin"

        environment ("GOPATH", projectDir)

        def executableName = project.mainPackage.lastIndexOf("/") != -1 ? project.mainPackage.substring(project.mainPackage.lastIndexOf("/")) : project.mainPackage
        logger.info("Assuming executable name: $executableName")
        outputs.file "$projectDir/$executableName"

}

task compileGo (dependsOn: assembleGo)

task runGo (type: Exec, dependsOn: assembleGo) {
    workingDir "$projectDir"
    def executableName = project.mainPackage.lastIndexOf("/") != -1 ? project.mainPackage.substring(project.mainPackage.lastIndexOf("/")) : project.mainPackage

    def cmdline = [executableName]

    if (project.hasProperty("runArgs")) {
        project.ext.runArgs.each {
            arg -> cmdline << arg
        }
    }



    commandLine cmdline

}



task cleanGo(type: Delete) {
    delete "$projectDir/pkg"
    delete "$projectDir/bin"
}

